/*
 *
 *  * MIT License
 *  *
 *  * Copyright (c) 2017 Enrico Bruno Del Zotto
 *  *
 *  * Permission is hereby granted, free of charge, to any person obtaining a copy
 *  * of this software and associated documentation files (the "Software"), to deal
 *  * in the Software without restriction, including without limitation the rights
 *  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *  * copies of the Software, and to permit persons to whom the Software is
 *  * furnished to do so, subject to the following conditions:
 *  *
 *  * The above copyright notice and this permission notice shall be included in all
 *  * copies or substantial portions of the Software.
 *  *
 *  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *  * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 *  * SOFTWARE.
 *
 */

apply plugin: 'com.android.application'
apply from: '../config/quality.gradle'

android {
    compileSdkVersion 25
    buildToolsVersion '26.0.2'
    defaultConfig {
        applicationId "com.icndb.joke"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.compileSdkVersion
        versionCode 1
        versionName "1.0"
//        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        testInstrumentationRunner "com.icndb.joke.CustomTestRunner"
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            applicationIdSuffix '.debug'
            versionNameSuffix '-debug'

            // Run code coverage reports by default on debug builds.
            testCoverageEnabled true
        }
    }
    configurations.all {
        resolutionStrategy {
            force rootProject.ext.testLibraries.supportAnnotations
            force rootProject.ext.libraries.androidSupport
            force rootProject.ext.libraries.appCompat
            force rootProject.ext.libraries.designSupport
            force rootProject.ext.libraries.recyclerView
        }
    }

}



dependencies {

    implementation project(':core')
    //Tests
    androidTestImplementation rootProject.ext.testLibraries.mockito
    androidTestImplementation rootProject.ext.testLibraries.dexmaker
    androidTestImplementation rootProject.ext.testLibraries.dexmakerMockito
    androidTestImplementation rootProject.ext.testLibraries.supportTestRunner
    androidTestImplementation rootProject.ext.testLibraries.supportAnnotations
    androidTestImplementation rootProject.ext.testLibraries.espressoContrib
    androidTestImplementation rootProject.ext.testLibraries.espresso
    androidTestImplementation rootProject.ext.libraries.mockwebserver
    androidTestImplementation project(':mock')
    //Dependency injection
    implementation rootProject.ext.libraries.dagger
    annotationProcessor rootProject.ext.aptLibraries.daggerCompiler
    testAnnotationProcessor rootProject.ext.aptLibraries.daggerCompiler

    //Libraries
    implementation rootProject.ext.libraries.appCompat
    implementation rootProject.ext.libraries.designSupport
    implementation rootProject.ext.libraries.recyclerView
    implementation rootProject.ext.libraries.cardView
    implementation rootProject.ext.libraries.glide

    //rxjava androiod stuff
    implementation rootProject.ext.libraries.rxjava
    implementation rootProject.ext.libraries.rxandroid
    implementation rootProject.ext.libraries.rxbinding
    implementation rootProject.ext.libraries.rxrelay

    //google gson
    implementation rootProject.ext.libraries.googlegson

    //ButterKnife
    implementation rootProject.ext.libraries.butterknife
    annotationProcessor rootProject.ext.aptLibraries.butterknifeCompiler

    //Lombok
    provided rootProject.ext.libraries.lombok
    annotationProcessor rootProject.ext.libraries.lombok

    //Extra stuff
    implementation 'com.yarolegovich:lovely-dialog:1.0.7'


}